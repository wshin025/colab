from sklearn.datasets import load_wine
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
import numpy as np


wine = load_wine()
X, y = wine.data, wine.target


pca = PCA(n_components=2)
X2 = pca.fit_transform(X)


X_train, X_test, y_train, y_test = train_test_split(X2, y, test_size=0.3, random_state=42)


knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train, y_train)


y_pred = knn.predict(X_test)
print("KNN 정확도 (Wine 데이터):", accuracy_score(y_test, y_pred))


x_min, x_max = X2[:, 0].min() - 1, X2[:, 0].max() + 1
y_min, y_max = X2[:, 1].min() - 1, X2[:, 1].max() + 1
xx, yy = np.meshgrid(np.arange(x_min, x_max, 0.02),
                     np.arange(y_min, y_max, 0.02))
Z = knn.predict(np.c_[xx.ravel(), yy.ravel()])
Z = Z.reshape(xx.shape)

plt.contourf(xx, yy, Z, alpha=0.3, cmap="rainbow")
plt.scatter(X_train[:, 0], X_train[:, 1], c=y_train, edgecolor="k", cmap="rainbow", label="Train")
plt.scatter(X_test[:, 0], X_test[:, 1], c=y_test, marker="^", edgecolor="k", cmap="rainbow", label="Test")
plt.title("KNN 분류 결과 (K=3, Wine 데이터)")
plt.xlabel("PCA1")
plt.ylabel("PCA2")
plt.legend()
plt.show()
